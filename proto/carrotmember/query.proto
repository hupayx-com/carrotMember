syntax = "proto3";
package hupayxcom.carrotmember.carrotmember;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "carrotmember/params.proto";
import "carrotmember/member.proto";
// this line is used by starport scaffolding # 1
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";


option go_package = "github.com/hupayx-com/carrotMember/x/carrotmember/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hupayxcom/carrotmember/carrotmember/params";
  }
  // Queries a list of members items.
	rpc Members(QueryMembersRequest) returns (QueryMembersResponse) {
		option (google.api.http).get = "/hupayx-com/carrotmember/carrotmember/members";
	}

// Queries a list of nextRewardTime items.
	rpc NextRewardTime(QueryNextRewardTimeRequest) returns (QueryNextRewardTimeResponse) {
		option (google.api.http).get = "/hupayx-com/carrotmember/carrotmember/nextRewardTime";
	}

// Queries a list of rewardPool items.
	rpc RewardPool(QueryRewardPoolRequest) returns (QueryRewardPoolResponse) {
		option (google.api.http).get = "/hupayx-com/carrotmember/carrotmember/rewardPool";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryMembersRequest {
  // Adding pagination to request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryMembersResponse {
  // Returning a list of posts
  repeated Member Member = 1;
  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryNextRewardTimeRequest {
}

message QueryNextRewardTimeResponse {
  string nextTime = 1;
}

message QueryRewardPoolRequest {
}

message QueryRewardPoolResponse {
  repeated cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
